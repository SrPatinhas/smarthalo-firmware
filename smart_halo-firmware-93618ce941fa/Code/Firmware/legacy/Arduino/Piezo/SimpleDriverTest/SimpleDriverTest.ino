#define OC1A_PIN 9
#define OC0A_PIN 6
#define OC2A_PIN 11
#define PIEZO_PIN 8
#define FREQ1 4000UL
#define CPUCLOCK  16000000UL
#define SAMPLERATE 8000UL
#define T0PRESCALE 8

#define TESTPIN 13

#define FREQ1CNT (CPUCLOCK/(2*FREQ1))-1

#define SINE_LEN      45
#define CARALARM_LEN  1000

const uint8_t SINE1K[SINE_LEN] = {128,146,163,180,196,211,224,235,243,250,254,255,254,250,244,235,224,212,197,181,164,147,128,110,93,75,59,45,32,21,12,6,1,0,1,5,11,19,30,43,57,73,90,108,126}; 
//const uint8_t CARALARM[CARALARM_LEN] = {185,238,224,231,228,228,232,222,245,125,5,36,19,29,24,24,30,12,150,248,218,237,223,234,225,232,222,52,16,31,20,31,18,34,8,142,248,217,238,221,237,219,244,177,16,31,21,29,22,29,18,49,224,230,228,230,228,230,228,227,51,18,29,23,26,26,21,50,232,223,235,223,236,220,244,166,9,35,16,34,15,37,6,169,239,226,229,231,225,237,204,32,23,27,23,26,26,22,184,242,222,232,229,224,243,119,6,34,21,25,30,12,88,241,225,228,233,221,245,176,22,23,31,16,38,4,100,237,229,225,236,218,249,136,10,31,23,25,29,16,168,247,217,239,218,245,182,22,26,26,22,31,12,158,248,217,239,219,242,192,27,24,27,22,30,18,181,243,219,238,218,246,104,7,37,15,37,6,117,248,217,239,218,245,169,12,33,18,34,11,85,245,218,238,219,245,165,9,36,15,37,6,128,248,218,238,219,244,87,10,34,18,31,22,205,232,230,225,239,176,8,37,14,36,13,196,233,230,225,238,187,13,35,15,37,9,185,233,232,219,249,124,10,30,25,20,47,222,231,228,229,231,74,9,34,21,22,162,249,218,234,235,107,3,36,22,17,132,251,219,230,240,135,5,34,25,14,139,248,220,231,236,95,6,35,20,25,176,247,217,238,219,64,7,41,6,73,226,234,220,247,136,6,36,17,36,198,243,216,246,179,22,24,30,13,157,250,214,245,189,29,21,32,10,144,251,213,248,173,17,29,23,30,196,242,216,249,120,5,38,10,69,235,224,235,211,40,19,33,11,156,250,213,250,129,5,40,5,126,250,213,249,160,11,35,14,61,234,222,239,192,19,32,15,63,236,221,240,190,17,35,9,98,250,213,249,151,7,40,5,140,249,215,244,74,13,31,27,214,228,235,198,19,35,8,127,252,211,250,82,15,27,42,232,219,247,139,5,38,13,193,234,232,194,10,41,2,143,243,226,209,15,39,4,166,238,232,189,9,39,9,187,233,236,169,3,41,13,210,223,245,141,8,31,50,248,211,244,34,38,0,127,237,234,190,15,33,22,214,225,238,52,30,5,149,234,242,161,20,15,77,231,237,192,26,23,30,191,243,222,83,4,34,150,254,211,87,0,36,153,254,221,117,0,38,156,253,221,114,0,39,157,254,208,81,0,54,187,254,190,53,0,76,213,251,166,30,7,100,235,239,107,8,28,155,254,196,60,0,96,225,247,115,13,22,146,254,205,68,0,116,234,236,101,2,48,192,254,170,27,14,160,250,206,58,0,118,240,231,99,0,76,220,243,107,0,62,213,247,121,2,53,202,252,132,7,41,193,253,113,4,52,209,246,95,2,65,224,234,81,0,81,234,224,65,2,128,254,184,27,22,177,254,137,4,58,219,238,91,0,106,244,209,42,19,186,251,136,0,93,239,218,53,12,175,253,147,0,78,239,207,34,24,193,247,92,0,130,254,157,5,67,233,215,43,18,182,252,101,0,153,254,134,1,84,251,167,10,55,233,200,24,33,206,229,43,27,212,224,47,14,178,247,71,10,183,244,70,10,185,243,68,11,186,244,63,26,223,216,39,31,226,193,9,69,240,190,5,102,254,151,0,144,250,75,7,181,236,33,53,237,197,14,86,254,123,0,169,242,46,39,235,181,1,114,254,98,7,192,229,23,92,254,113,3,177,239,34,75,254,128,8,200,223,20,98,254,101,19,218,205,7,127,250,41,65,254,141,2,194,208,0,135,245,39,68,254,94,21,233,161,0,183,218,8,119,251,51,54,254,104,35,250,131,1,214,158,0,193,209,7,168,229,11,147,242,21,125,254,31,108,244,17,96,246,35,104,254,43,90,251,26,116,240,13,102,245,28,116,243,6,150,220,3,170,206,0,203,170,20,247,102,34,254,72,62,243,17,132,231,9,201,172,0,228,100,37,254,59,106,247,9,188,184,13,243,65,71,243,4,155,186,8,254,92,75,239,7,199,140,9,254,44,129,205,1,246,67,103,227,0,236,88,81,239,0,216,116,55,252,2,198,139,37,254,21,214,113,59,249,9,242,72,102,195,2,254,42,174,159,26,242,0,215,74,104,193,2,254,0,205,87,126,201,24,254,14,219,62,121,170,51,232,0,245,30,196,91,89,200,26,249,0,254,0,248,26,158,134,86,198,33,237,8,246,16,222,58,213,55,178,101,128,150,84,181,92,187,54,203,58,170,67,180,99,173,90,140,96,146,129,142,127,106,131,103,133,102,177,85};


void setup() {

  noInterrupts();
  
  // put your setup code here, to run once:
  Serial.begin(9600);
  
  pinMode(OC1A_PIN,OUTPUT);
  digitalWrite(OC1A_PIN,LOW);

  pinMode(OC0A_PIN,OUTPUT);
  digitalWrite(OC0A_PIN,LOW);

  pinMode(OC2A_PIN,OUTPUT);
  digitalWrite(OC2A_PIN,LOW);

  pinMode(TESTPIN,OUTPUT);
  digitalWrite(TESTPIN,LOW);

  // Simple Square Wave Generator
  TCCR1A = 0x40; // Toggle OC1A pin
  TCCR1B = 0x09; // CLK/1
  OCR1A = FREQ1CNT;
  //TIMSK1 |= 0x02; // Enable OC1A Interrupt

  // PWM for DAC output
  TCCR0A = _BV(COM0A1) | _BV(WGM01) | _BV(WGM00); // Fast PWM, TOP = 0xFF
  TCCR0B = _BV(CS00); // CLK = CLKIO
  OCR0A = 0x7F; // Set PWM to 50% => NULL Output after low pass and AC coupling

  // Timer2 for sample playback rate (PRESCALE = 8)  
  TCCR2A = _BV(WGM21); // _BV(COM2A0) | _BV(WGM21);  // CTC mode, toggle on match OC2A pin
  TCCR2B = _BV(CS21); // CLK = CLKIO/8  
  OCR2A = (CPUCLOCK/(T0PRESCALE*SAMPLERATE)) - 1;
  TIMSK2 = _BV(OCIE0A); // Enable Timer2 CMPA Interrupt
  
  interrupts();
}

void loop() {
  // put your main code here, to run repeatedly:
  //onOffSiren();
  
  delay(100);
}
//
//ISR(TIMER1_COMPA_vect)
//{
//  static byte piezoState =  LOW;
//
//  piezoState = ~piezoState;
//  digitalWrite(PIEZO_PIN,piezoState);
//}

void onOffSiren()
{
  static boolean freqState = false;
  static int cntState = 0;

  if( !freqState && cntState == 1 )
  {     
     TCCR1A = 0x00;
     freqState = true; 
     cntState = 0;     
  }
  else if( freqState && cntState == 2 )
  {  
    TCCR1A = 0x40;
    freqState = false;
    cntState = 0;
   }
   
  cntState++;
}

ISR(TIMER2_COMPA_vect)
{
  static uint8_t testCnt = LOW;
  static uint8_t sampleCnt =  0;

  //OCR0A = sampleCnt; // Sawtooth
  OCR0A = SINE1K[sampleCnt]; // Sinewave
  //OCR0A = CARALARM[sampleCnt]; // Car Alarm
  sampleCnt++;
    
  //if(sampleCnt==CARALARM_LEN)
  if(sampleCnt==SINE_LEN)
    sampleCnt = 0 ;

  digitalWrite(TESTPIN,testCnt);
  testCnt=(testCnt==LOW)?HIGH:LOW;
}

